{"version":3,"sources":["history.js","components/AngledEdge/components/CodeArea/CodeArea.js","components/AngledEdge/AngledEdge.js","components/ColorPicker/ColorPicker.js","containers/App.js","index.js"],"names":["createBrowserHistory","CodeArea","_ref","code","react_default","a","createElement","style","fontSize","default_highlight","language","github","ShapeContainer","styled","div","_templateObject","Shape","_templateObject2","props","wedge","width","Math","round","height","position","HypotenuseOptions","label","value","AngledEdge","degrees","angle","hypotenuse","fill","_ref$height","_ref$width","_ref$codeSnippet","codeSnippet","undefined","tan","PI","color","tinycolor","fillRGB","concat","_r","_g","_b","fillAlpha","_a","points","upper-left","upper-right","lower-left","lower-right","svg","encodedSVG","replace","getBackgroundData","drawWedge","getPosition","styleData","components_CodeArea_CodeArea","ColorPicker","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","onChange","handleChangeComplete","onChangeComplete","toggleColorPicker","setState","displayColorPicker","state","closeColorPicker","_this2","Swatch","onClick","marginLeft","Color","Popover","Cover","lib","rgb","r","g","b","_ref2","Component","ColorPicker_templateObject","ColorPicker_templateObject2","_templateObject3","_templateObject4","App","updateStateFromQueryString","params","queryString","parse","location","search","updated","objectSpread","controls","allowed","keys","filtered","filter","key","includes","reduce","obj","type","parseInt","name","console","log","defineProperty","handleChangeAndUpdate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","history","push","stringify","encode","stop","_x","_x2","apply","arguments","fluid","fillTop","fillShape","fillBottom","hypotenuseMenu","menu","e","map","option","Item","SectionTop","Title","Subtitle","components_AngledEdge_AngledEdge","SectionBottom","Controls","es_form","layout","row","col","sm","md","components_ColorPicker_ColorPicker","es_radio","Group","defaultValue","buttonStyle","target","Button","App_Color","es_checkbox","checked","dropdown","overlay","trigger","minWidth","es_button","icon","span","slider","disabled","max","min","onAfterChange","input_number","step","h1","App_templateObject","p","App_templateObject2","App_templateObject3","App_templateObject4","_templateObject5","_templateObject6","ReactDOM","render","Router","Route","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.4c39b63f.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\nexport default createBrowserHistory();\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { github } from 'react-syntax-highlighter/dist/styles/hljs';\n\nconst CodeArea = ({ code }) => {\n  return (\n    <div style={{ fontSize: '0.8em' }}>\n      <SyntaxHighlighter language=\"scss\" style={github}>\n        {code}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default CodeArea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport tinycolor from 'tinycolor2';\nimport CodeArea from './components/CodeArea';\n\nconst propTypes = {\n  hypotenuse: PropTypes.oneOf([\n    'upper-left',\n    'upper-right',\n    'lower-left',\n    'lower-right'\n  ]).isRequired,\n  fill  : PropTypes.string.isRequired,\n  height: PropTypes.number,\n  width : PropTypes.number,\n  angle : PropTypes.number\n};\n\nconst getBackgroundData = svg => {\n  let encodedSVG = '';\n\n  encodedSVG = svg.replace('<svg', '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n  encodedSVG = encodedSVG.replace('%', '%25');\n  encodedSVG = encodedSVG.replace(/\"/g, \"'\");\n  encodedSVG = encodedSVG.replace(/</g, '%3C');\n  encodedSVG = encodedSVG.replace(/>/g, '%3E');\n\n  return `data:image/svg+xml,${encodedSVG}`;\n};\n\nconst drawWedge = (hypotenuse, fill, height, width) => {\n  const color = tinycolor(fill);\n  const fillRGB = `rgb(${color._r},${color._g},${color._b})`;\n  const fillAlpha = color._a;\n  let points = {};\n  let wedge = '';\n\n  if (null === width) {\n    // Full width shape - angle changes at different screen resolutions.\n    points = {\n      'upper-left' : `0,${height} 100,${height} 100,0`,\n      'upper-right': `0,${height} 100,${height} 0,0`,\n      'lower-left' : `0,0 100,${height} 100,0`,\n      'lower-right': `0,0 100,0 0,${height}`\n    };\n\n    // Raw SVG markup for the colored wedge.\n    wedge = `<svg preserveAspectRatio=\"none\" viewBox=\"0 0 100 ${height}\" fill=\"${fillRGB}\" fill-opacity=\"${fillAlpha}\"><polygon points=\"${\n      points[hypotenuse]\n    }\"></polygon></svg>`;\n  } else {\n    // Fixed width shape - angle does not change.\n    points = {\n      'upper-left' : `0,${height} ${width},${height} ${width},0`,\n      'upper-right': `0,${height} ${width},${height} 0,0`,\n      'lower-left' : `0,0 ${width},${height} ${width},0`,\n      'lower-right': `0,0 ${width},0 0,${height}`\n    };\n\n    // Raw SVG markup for the colored wedge.\n    wedge = `<svg width=\"${width}\" height=\"${height}\" fill=\"${fillRGB}\" fill-opacity=\"${fillAlpha}\"><polygon points=\"${\n      points[hypotenuse]\n    }\"></polygon></svg>`;\n  }\n\n  return getBackgroundData(wedge);\n};\n\nconst getPosition = (hypotenuse, height) => {\n  switch (hypotenuse) {\n    case 'upper-left': {\n      return `-${Math.round(height)}`;\n    }\n    case 'upper-right': {\n      return `-${Math.round(height)}`;\n    }\n    case 'lower-left': {\n      return 0;\n    }\n    case 'lower-right': {\n      return 0;\n    }\n    default: {\n      break;\n    }\n  }\n};\n\nconst getTanFromDegrees = degrees => {\n  return Math.tan((degrees * Math.PI) / 180);\n};\n\nconst AngledEdge = ({\n  angle,\n  hypotenuse,\n  fill,\n  height = 100,\n  width = null,\n  codeSnippet = false\n}) => {\n  if (angle && (width !== null && width !== undefined && width !== 0)) {\n    height = Math.round(getTanFromDegrees(angle) * width);\n  }\n\n  const wedge = drawWedge(hypotenuse, fill, height, width);\n  const position = getPosition(hypotenuse, height);\n  const styleData = (\n    <CodeArea\n      code={`.example-class {\n  position: relative;\n}\n.example-class::before {\n  position: absolute;\n  pointer-events: none;\n  background-image: url(\"${wedge}\");\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: ${!width && '100% 100%'};\n  content: '';\n  height: ${Math.round(height)}px;\n  top: ${position}px;\n  right: 0;\n  left: 0;\n  width: 100%;\n  z-index: 1;\n}`}\n    />\n  );\n\n  return codeSnippet ? (\n    styleData\n  ) : (\n    <ShapeContainer>\n      <Shape position={position} wedge={wedge} height={height} width={width} />\n    </ShapeContainer>\n  );\n};\n\nconst ShapeContainer = styled.div`\n  position: relative;\n`;\n\nconst Shape = styled.div`\n  position: absolute;\n  pointer-events: none;\n  background-image: url(\"${props => props.wedge}\");\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: ${props => !props.width && '100% 100%'};\n  content: '';\n  /* Round height in order to fix subpixel rendering in webkit browsers. */\n  height: ${props => Math.round(props.height)}px;\n  top: ${props => props.position}px;\n  right: 0;\n  left: 0;\n  width: 100%;\n  z-index: 1;\n  overflow: hidden;\n`;\n\nexport const HypotenuseOptions = [\n  {\n    label: 'Upper Left',\n    value: 'upper-left'\n  },\n  {\n    label: 'Upper Right',\n    value: 'upper-right'\n  },\n  {\n    label: 'Lower Left',\n    value: 'lower-left'\n  },\n  {\n    label: 'Lower Right',\n    value: 'lower-right'\n  }\n];\n\nAngledEdge.propTypes = propTypes;\n\nexport default AngledEdge;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { ChromePicker } from 'react-color';\n\nclass ColorPicker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      displayColorPicker: false\n    };\n  }\n\n  handleChange = value => {\n    this.props.onChange(value);\n  };\n\n  handleChangeComplete = value => {\n    this.props.onChangeComplete(value);\n  };\n\n  toggleColorPicker = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  closeColorPicker = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.label}\n        <Swatch\n          onClick={() => this.toggleColorPicker()}\n          style={{ marginLeft: 8 }}\n        >\n          <Color fill={this.props.fill} />\n        </Swatch>\n        {this.state.displayColorPicker ? (\n          <Popover>\n            <Cover onClick={() => this.closeColorPicker()} />\n            <ChromePicker\n              color={this.props.fill}\n              onChange={({ rgb }) =>\n                this.handleChange(`rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`)\n              }\n              onChangeComplete={({ rgb }) =>\n                this.handleChangeComplete(\n                  `rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`\n                )\n              }\n            />\n          </Popover>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst Popover = styled.div`\n  position: absolute;\n  z-index: 2;\n`;\n\nconst Cover = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst Swatch = styled.div`\n  padding: 5px;\n  background-color: #fff;\n  border-radius: 1px;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n`;\n\nconst Color = styled.div`\n  width: 36px;\n  height: 14px;\n  border-radius: 2px;\n  background-color: ${props => props.fill};\n`;\n\nexport default ColorPicker;\n","import React, { Component } from 'react';\nimport history from '../history';\nimport queryString from 'query-string';\nimport AngledEdge, { HypotenuseOptions } from 'components/AngledEdge';\nimport ColorPicker from 'components/ColorPicker';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Checkbox,\n  Col,\n  Dropdown,\n  Form,\n  Icon,\n  InputNumber,\n  Menu,\n  Row,\n  Slider,\n  Radio\n} from 'antd';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      controls: {\n        angle     : 10,\n        fluid     : false,\n        hypotenuse: 'lower-left',\n        height    : 200,\n        width     : 800,\n        fillTop   : 'rgba(234,50,23,1.0)',\n        fillShape : 'rgba(234,50,23,1.0)',\n        fillBottom: 'rgba(239,239,239,1.0)'\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.updateStateFromQueryString();\n  }\n\n  updateStateFromQueryString = () => {\n    const params = queryString.parse(this.props.location.search);\n    const updated = { ...this.state.controls, ...params };\n    const allowed = Object.keys(this.state.controls);\n\n    const filtered = Object.keys(updated)\n      .filter(key => allowed.includes(key))\n      .reduce((obj, key) => {\n        const type = typeof this.state.controls[key];\n        if ('boolean' === type) {\n          obj[key] = 'true' === updated[key];\n        } else if ('number' === type) {\n          obj[key] = parseInt(updated[key]);\n        } else {\n          obj[key] = updated[key];\n        }\n        return obj;\n      }, {});\n\n    this.setState({\n      controls: filtered\n    });\n  };\n\n  handleChange = (name, value) => {\n    console.log(name, value);\n    this.setState({\n      controls: {\n        ...this.state.controls,\n        [name]: value\n      }\n    });\n  };\n\n  handleChangeAndUpdate = async (name, value) => {\n    console.log(name, value);\n    await this.setState({\n      controls: {\n        ...this.state.controls,\n        [name]: value\n      }\n    });\n\n    await history.push(\n      `/?${queryString.stringify(this.state.controls, {\n        encode: false\n      })}`\n    );\n  };\n\n  render() {\n    const { controls } = this.state;\n    const hypotenuseMenu = (\n      <Menu onClick={e => this.handleChangeAndUpdate('hypotenuse', e.key)}>\n        {HypotenuseOptions.map(option => (\n          <Menu.Item key={option.value}>{option.value}</Menu.Item>\n        ))}\n      </Menu>\n    );\n\n    return (\n      <div>\n        <SectionTop fill={controls.fillTop}>\n          <Title>Angled Edges Generator</Title>\n          <Subtitle>\n            Create angled edges on sections\n            <br />\n            by dynamically encoding SVGs.\n          </Subtitle>\n        </SectionTop>\n        <AngledEdge\n          angle={controls.fluid ? null : controls.angle}\n          fill={controls.fillShape}\n          height={!controls.fluid ? null : controls.height}\n          hypotenuse={controls.hypotenuse}\n          width={controls.fluid ? null : controls.width}\n        />\n        <SectionBottom fill={controls.fillBottom}>\n          <Controls>\n            <Form layout=\"horizontal\">\n              <Row>\n                <Col sm={24} md={10}>\n                  <Form.Item>\n                    <ColorPicker\n                      fill={controls.fillTop}\n                      label=\"top section color:\"\n                      onChange={e => this.handleChange('fillTop', e)}\n                      onChangeComplete={e =>\n                        this.handleChangeAndUpdate('fillTop', e)\n                      }\n                    />\n                    <ColorPicker\n                      fill={controls.fillBottom}\n                      label=\"bottom section color:\"\n                      onChange={e => this.handleChange('fillBottom', e)}\n                      onChangeComplete={e =>\n                        this.handleChangeAndUpdate('fillBottom', e)\n                      }\n                    />\n                    <Radio.Group\n                      defaultValue=\"a\"\n                      buttonStyle=\"solid\"\n                      onChange={e =>\n                        this.handleChangeAndUpdate('fillShape', e.target.value)\n                      }\n                    >\n                      shape color:\n                      <Radio.Button\n                        style={{ marginLeft: 8, fontSize: 12 }}\n                        value={controls.fillTop}\n                      >\n                        from top\n                        <Color fill={controls.fillTop} />\n                      </Radio.Button>\n                      <Radio.Button\n                        style={{ fontSize: 12 }}\n                        value={controls.fillBottom}\n                      >\n                        from bottom\n                        <Color fill={controls.fillBottom} />\n                      </Radio.Button>\n                    </Radio.Group>\n                  </Form.Item>\n                </Col>\n                <Col sm={24} md={7}>\n                  <Form.Item>\n                    <label>\n                      fluid width:\n                      <Checkbox\n                        checked={controls.fluid}\n                        onChange={e =>\n                          this.handleChangeAndUpdate('fluid', e.target.checked)\n                        }\n                        style={{ marginLeft: 8 }}\n                      />\n                    </label>\n                    <div>\n                      <Dropdown\n                        onChange={e =>\n                          this.handleChangeAndUpdate(\n                            'hypotenuse',\n                            e.target.value\n                          )\n                        }\n                        overlay={hypotenuseMenu}\n                        trigger={['click']}\n                      >\n                        <div style={{ minWidth: '20rem' }}>\n                          hypotenuse:\n                          <Button style={{ marginLeft: 8 }}>\n                            {controls.hypotenuse}\n                            <Icon type=\"down\" />\n                          </Button>\n                        </div>\n                      </Dropdown>\n                    </div>\n                  </Form.Item>\n                </Col>\n                <Col sm={24} md={7}>\n                  <Form.Item>\n                    {!controls.fluid && (\n                      <Row>\n                        <Col span={4}>angle:</Col>\n                        <Col span={12}>\n                          <Slider\n                            disabled={controls.fluid}\n                            max={45}\n                            min={1}\n                            onAfterChange={e =>\n                              this.handleChangeAndUpdate('angle', e)\n                            }\n                            onChange={e => this.handleChange('angle', e)}\n                            style={{ marginLeft: 16 }}\n                            value={controls.angle}\n                          />\n                        </Col>\n                        <Col span={4}>\n                          <InputNumber\n                            disabled={controls.fluid}\n                            max={45}\n                            min={1}\n                            onChange={e =>\n                              this.handleChangeAndUpdate('angle', e)\n                            }\n                            style={{\n                              marginLeft: 8,\n                              width     : '100%',\n                              minWidth  : 70\n                            }}\n                            value={controls.angle}\n                          />\n                        </Col>\n                      </Row>\n                    )}\n                    {!controls.fluid && (\n                      <Row>\n                        <Col span={4}>width:</Col>\n                        <Col span={12}>\n                          <Slider\n                            disabled={controls.fluid}\n                            max={2500}\n                            min={0}\n                            onAfterChange={e =>\n                              this.handleChangeAndUpdate('width', e)\n                            }\n                            onChange={e => this.handleChange('width', e)}\n                            step={10}\n                            style={{ marginLeft: 16 }}\n                            value={controls.width}\n                          />\n                        </Col>\n                        <Col span={4}>\n                          <InputNumber\n                            disabled={controls.fluid}\n                            max={2500}\n                            min={0}\n                            onChange={e =>\n                              this.handleChangeAndUpdate('width', e)\n                            }\n                            style={{\n                              marginLeft: 8,\n                              width     : '100%',\n                              minWidth  : 70\n                            }}\n                            value={controls.width}\n                          />\n                        </Col>\n                      </Row>\n                    )}\n                    {controls.fluid && (\n                      <Row>\n                        <Col span={4}>height:</Col>\n                        <Col span={12}>\n                          <Slider\n                            disabled={!controls.fluid}\n                            max={500}\n                            min={0}\n                            onAfterChange={e =>\n                              this.handleChangeAndUpdate('height', e)\n                            }\n                            onChange={e => this.handleChange('height', e)}\n                            step={10}\n                            style={{ marginLeft: 16 }}\n                            value={controls.height}\n                          />\n                        </Col>\n                        <Col span={4}>\n                          <InputNumber\n                            disabled={!controls.fluid}\n                            max={500}\n                            min={0}\n                            onChange={e =>\n                              this.handleChangeAndUpdate('height', e)\n                            }\n                            style={{\n                              marginLeft: 8,\n                              width     : '100%',\n                              minWidth  : 70\n                            }}\n                            value={controls.height}\n                          />\n                        </Col>\n                      </Row>\n                    )}\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row>\n                <AngledEdge\n                  codeSnippet\n                  angle={controls.fluid ? null : controls.angle}\n                  fill={controls.fillShape}\n                  height={!controls.fluid ? null : controls.height}\n                  hypotenuse={controls.hypotenuse}\n                  width={controls.fluid ? null : controls.width}\n                />\n              </Row>\n            </Form>\n          </Controls>\n        </SectionBottom>\n      </div>\n    );\n  }\n}\n\nconst Title = styled.h1`\n  color: #fff;\n  font-family: Helvetica, sans-serif;\n  font-size: 3em;\n  font-weight: bold;\n  line-height: 1.3;\n  text-align: center;\n`;\n\nconst Subtitle = styled.p`\n  color: #fff;\n  font-family: Helvetica, sans-serif;\n  font-size: 20px;\n  line-height: 1.3;\n  text-align: center;\n`;\n\nconst Controls = styled.div`\n  width: 100rem;\n  max-width: 100%;\n  position: relative;\n  left: 0;\n  right: 0;\n  padding: 1rem;\n  z-index: 2;\n  margin: 0 auto;\n\n  > form {\n    padding: 1rem;\n    background-color: #fff;\n    border-radius: 3px;\n    box-shadow: 0px 10px 40px 0px rgba(47, 47, 47, 0.1);\n  }\n`;\n\nconst SectionTop = styled.div`\n  background-color: ${props => props.fill};\n  height: 20rem;\n  padding-top: 2.5rem;\n`;\n\nconst SectionBottom = styled.div`\n  min-height: 20rem;\n  background-color: ${props => props.fill};\n  padding-top: 15rem;\n`;\n\nconst Color = styled.span`\n  width: 18px;\n  height: 18px;\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: 8px;\n  border-radius: 50px;\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);\n  background-color: ${props => props.fill};\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'antd/dist/antd.css';\nimport { Router, Route } from 'react-router-dom';\nimport history from './history';\nimport App from './containers/App';\n\nReactDOM.render(\n  <Router history={history}>\n    <Route path=\"/\" component={App} />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}